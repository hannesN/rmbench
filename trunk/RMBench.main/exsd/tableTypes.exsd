<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.byterefinery.rmbench">
<annotation>
      <appInfo>
         <meta.schema plugin="com.byterefinery.rmbench" id="tableTypes" name="Table Types"/>
      </appInfo>
      <documentation>
         table types provide a means to assign symbolic names to groups of tables, for use in presentation and code generation.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="type" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="type">
      <annotation>
         <documentation>
            a table type is a symbolic name that can be assigned to a group of tables, for use in presentation and code generation.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique ID for this element
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  a displayable, translatable label. If absent, the ID will be used for presentation purposes
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="theme" type="string">
            <annotation>
               <documentation>
                  the name of a theme that is associated with this type. Tables that bear this type are shown are shown in diagrams as specified by the theme.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;pre&gt;
   &lt;extension
         point=&quot;com.byterefinery.rmbench.tableTypes&quot;&gt;
      &lt;type
            id=&quot;lookup&quot;
            label=&quot;Lookup&quot;
            theme=&quot;theme1&quot;/&gt;
      &lt;type
            id=&quot;associative&quot;
            label=&quot;Associative&quot;
            theme=&quot;theme2&quot;/&gt;
   &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         RMBench provides the following predefined table types:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Lookup&lt;/b&gt;. A table with lookup values (e.g., currency, country) that are seldom changed&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Associative&lt;/b&gt;. An table that associates 2 or more entities in the physical model&lt;/li&gt;
&lt;/ul&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         &amp;copy; 2005, DynaBEAN Consulting
      </documentation>
   </annotation>

</schema>
